// Mocks generated by Mockito 5.0.0-nullsafety.7 from annotations
// in flutter_app/test/add_task_widget_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:flutter_app/pages/labels/label.dart' as _i6;
import 'package:flutter_app/pages/labels/label_db.dart' as _i5;
import 'package:flutter_app/pages/projects/project.dart' as _i4;
import 'package:flutter_app/pages/projects/project_db.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [ProjectDB].
///
/// See the documentation for Mockito's code generation for more information.
class MockProjectDB extends _i1.Mock implements _i2.ProjectDB {
  MockProjectDB() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Project>> getProjects({bool? isInboxVisible = true}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #getProjects, [], {#isInboxVisible: isInboxVisible}),
              returnValue: Future.value(<_i4.Project>[]))
          as _i3.Future<List<_i4.Project>>);
  @override
  _i3.Future<dynamic> insertOrReplace(_i4.Project? project) =>
      (super.noSuchMethod(Invocation.method(#insertOrReplace, [project]),
          returnValue: Future.value(null)) as _i3.Future<dynamic>);
  @override
  _i3.Future<dynamic> deleteProject(int? projectID) =>
      (super.noSuchMethod(Invocation.method(#deleteProject, [projectID]),
          returnValue: Future.value(null)) as _i3.Future<dynamic>);
}

/// A class which mocks [LabelDB].
///
/// See the documentation for Mockito's code generation for more information.
class MockLabelDB extends _i1.Mock implements _i5.LabelDB {
  MockLabelDB() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> isLabelExits(_i6.Label? label) =>
      (super.noSuchMethod(Invocation.method(#isLabelExits, [label]),
          returnValue: Future.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<dynamic> updateLabels(_i6.Label? label) =>
      (super.noSuchMethod(Invocation.method(#updateLabels, [label]),
          returnValue: Future.value(null)) as _i3.Future<dynamic>);
  @override
  _i3.Future<List<_i6.Label>> getLabels() => (super.noSuchMethod(
      Invocation.method(#getLabels, []),
      returnValue: Future.value(<_i6.Label>[])) as _i3.Future<List<_i6.Label>>);
  @override
  _i3.Future<dynamic> deleteLabel(int? labelId) =>
      (super.noSuchMethod(Invocation.method(#deleteLabel, [labelId]),
          returnValue: Future.value(null)) as _i3.Future<dynamic>);
}
