// Mocks generated by Mockito 5.0.0-nullsafety.7 from annotations
// in flutter_app/test/task_list_dissmissble_widget_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:flutter_app/pages/tasks/models/tasks.dart' as _i4;
import 'package:flutter_app/pages/tasks/task_db.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [TaskDB].
///
/// See the documentation for Mockito's code generation for more information.
class MockTaskDB extends _i1.Mock implements _i2.TaskDB {
  MockTaskDB() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Tasks>> getTasks(
          {int? startDate = 0, int? endDate = 0, _i4.TaskStatus? taskStatus}) =>
      (super.noSuchMethod(
              Invocation.method(#getTasks, [], {
                #startDate: startDate,
                #endDate: endDate,
                #taskStatus: taskStatus
              }),
              returnValue: Future.value(<_i4.Tasks>[]))
          as _i3.Future<List<_i4.Tasks>>);
  @override
  _i3.Future<List<_i4.Tasks>> getTasksByProject(int? projectId,
          {_i4.TaskStatus? status}) =>
      (super.noSuchMethod(
          Invocation.method(#getTasksByProject, [projectId], {#status: status}),
          returnValue:
              Future.value(<_i4.Tasks>[])) as _i3.Future<List<_i4.Tasks>>);
  @override
  _i3.Future<List<_i4.Tasks>> getTasksByLabel(String? labelName,
          {_i4.TaskStatus? status}) =>
      (super.noSuchMethod(
          Invocation.method(#getTasksByLabel, [labelName], {#status: status}),
          returnValue:
              Future.value(<_i4.Tasks>[])) as _i3.Future<List<_i4.Tasks>>);
  @override
  _i3.Future<dynamic> deleteTask(int? taskID) =>
      (super.noSuchMethod(Invocation.method(#deleteTask, [taskID]),
          returnValue: Future.value(null)) as _i3.Future<dynamic>);
  @override
  _i3.Future<dynamic> updateTaskStatus(int? taskID, _i4.TaskStatus? status) =>
      (super.noSuchMethod(
          Invocation.method(#updateTaskStatus, [taskID, status]),
          returnValue: Future.value(null)) as _i3.Future<dynamic>);
  @override
  _i3.Future<dynamic> updateTask(_i4.Tasks? task, {List<int>? labelIDs}) =>
      (super.noSuchMethod(
          Invocation.method(#updateTask, [task], {#labelIDs: labelIDs}),
          returnValue: Future.value(null)) as _i3.Future<dynamic>);
}
